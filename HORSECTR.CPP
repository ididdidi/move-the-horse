//-------------------------- ФУНКЦИИ УПРАВЛЕНИЯ -----------------------------
/*
void Start(abc q);                 //       Стартовые настройки и сообщения.
void semiavto(cell CB[S][S]);      // 		   Полуавтоматический режим.
void avto(cell CB[S][S]);          //                  Автоматический режим.
 int klaw(char &ss);               //                      Опрос клавиатуры.
void Stohas(int n, int dd=9);      // Звуковое сопровождение вывода матрицы.
void Pisk(int n);                  //                        Звуковая метка.
void Exit();                       //           Завершение работы программы.

*/
//------------------- Стартовые настройки и сообщения ----------------------
void Start(abc q)
{
			textmode(C4350);          // Задание размера экрана.
			textattr(0x1A); clrscr();   	    // Смена цветов.
   if(!q)
    {
	horse();                             	       // Вывод изображения;
	PrintS(30,43,0);                               // Вывод приветствия;
    }
}
//--------------------------------- Help -----------------------------------
void Help()
{
 outupText("Help.txt");	 			  // Вывод текста на экран;
 getch();
}
//----------------------------- Ручной режим -------------------------------
void manual(cell CB[S][S])
{
  int uu;
 do{
    metodMAN(CB);
		textattr(0x1A);  	clrscr();
    gotoxy(31,15); cout<<"Для выхода нажмите Esc"; // Вывод сообщения на экран;
    gotoxy(23,17); cout<<"Для продолжения - любую другую клавишу...";
    uu = getch();
  }while(uu!=27);                              		   // Выход по Esc;

}

//------------------------- Полуавтоматический режим -----------------------
void semiavto(cell CB[S][S])
 {
  int uu;                     // Преременная для управления выходом по ESC;
  int step = 0;        			         // Шаг в алгоритме обхода;
  cho=0;           			      // Количество сделаных ходов;
  brk=1;            			   // Установка задержки в единицу;
  reg=1;                              // Режим автоматического выбора хода;
  VIZ=0;				   // Установка режима отображения;

  do{
   zeroing(CB,step,cho);       			   // Тотальноое обнуление;
   coordinates();              			    // Выбор точки отсчета;
   method(CB,step,cho);                        	 // Порядок обхода массива;
   clrscr();  PrintS(30,14,1);                 // Вывод сообщения на экран;
     uu = getch();
  }while(uu!=27);                              		   // Выход по Esc;
 }
//-------------------------- Автоматический режим --------------------------
void avto(cell CB[S][S])
 {
  int step = 0;        			          // Шаг в алгоритме обхода;
  cho=0;           			       // Количество сделаных ходов;
  brk=0;            			       // Установка задержки в ноль;
  reg=1;                               // Режим автоматического выбора хода;
  VIZ=0;				    // Установка режима отображения;

  for(vertical=0;vertical<S;vertical++)      // Цикл обработки всей матрицы;
   for(skyline=0; skyline<S;skyline++)
    {
	zeroing(CB,step,cho);      	    // Обнуление матрицы при обходе!
	i=(abc)skyline; j=(abc)vertical;    // Переназначение точки отсчета;
	outputONS(skyline, vertical);	    // Вывод точки отсчета на экран;
	Look(CB);                           	  // Вывод матрицы на экран;
	method(CB,step,cho);                      // Порядок обхода массива;
 }
}
//  -------------------------- Опрос клавиатуры -----------------------------
 int klaw(char &ss)              //
{
		   ss=getch();   // Ввод возможно певого байта кода клавиши.
       if(!ss) {           // Если первый байт == 0, то клавиша управляющая.
		   ss=getch();   //         Ввод второго байта кода клавиши.
		return 1;        //       Возврат 1 при управляющей клавише.
	       }
return 0;                        //     Возврат нуля при символьной клавише.
}

//  ----------------------- Звуковое сопровождение -------------------------
void Stohas(int n, int dd)         //
{
 for(long i=n; --i;) {             //                Смена пискозадавателей.
	sound(400+n*i*i*i%2359);   //         Почти случайная частота писка.
		    delay(1+dd);   //           Длительность текущего писка.
		     }
      nosound();                   //                      Выключение звука.
}

 //  ------------------------- Звуковая метка ------------------------------
void Pisk(int n)                   //
{
   for(int i=0; i!=n; i++)         //                Смена пискозадавателей.
   {
	 sound((i*i+300)%250);   //         Почти случайная частота писка.
		      delay(200);   //           Длительность текущего писка.
   }
		nosound();         //                      Выключение звука.
}

//  --------------------- Завершение работы программы ----------------------
void Exit()                        //
{
	 textattr(0x1A); clrscr(); //          Смена цветов фона и символов.
	 gotoxy(30,14); cout << "Поскакали и хватит!!!"; //          Прощание.
	Pisk(10);   delay(1000);                   //        Звуковая метка.
	      //	exit(0);                   // Прекращение программы.
}
//**************************************************************************